"use strict";(self.webpackChunksnow_white_ui=self.webpackChunksnow_white_ui||[]).push([[42],{"./src/stories/sheet/Sheet.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Toggle:()=>Toggle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Sheet_stories});var taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const sheet_module_sheet="sheet_sheet__jVHcE",sheet_module_sheet_header="sheet_sheet_header__iFp0u",sheet_module_dim="sheet_dim__-W5i8";var _templateObject,jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const SheetStyle=styled_components_browser_esm.ZP.div(_templateObject||(_templateObject=(0,taggedTemplateLiteral.Z)(["\n  top: ",";\n"])),(props=>props.isShow?"calc(100% - ".concat(props.height,")"):"100%")),Sheet=_ref=>{let{children,isDim=!1,isShow=!1,height="50%",onClose}=_ref;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[isDim&&isShow&&(0,jsx_runtime.jsx)("div",{className:sheet_module_dim}),(0,jsx_runtime.jsxs)(SheetStyle,{className:sheet_module_sheet,height,isShow,children:[(0,jsx_runtime.jsx)("div",{className:sheet_module_sheet_header,onClick:()=>onClose(),children:(0,jsx_runtime.jsx)("span",{})}),children]})]})},sheet_Sheet=Sheet;try{Sheet.displayName="Sheet",Sheet.__docgenInfo={description:"",displayName:"Sheet",props:{isShow:{defaultValue:{value:"false"},description:"",name:"isShow",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},isDim:{defaultValue:{value:"false"},description:"",name:"isDim",required:!1,type:{name:"boolean"}},height:{defaultValue:{value:"50%"},description:"",name:"height",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/sheet/Sheet.tsx#Sheet"]={docgenInfo:Sheet.__docgenInfo,name:"Sheet",path:"src/stories/sheet/Sheet.tsx#Sheet"})}catch(__react_docgen_typescript_loader_error){}const Sheet_stories={title:"Component/Sheet",component:sheet_Sheet,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{height:"400px"},children:Story()})]},Toggle={args:{isShow:!1,isDim:!1},render:function Render(args){const[isShow,setIsShow]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setIsShow(!0),children:"Open Sheet"}),(0,jsx_runtime.jsx)(sheet_Sheet,{...args,isShow,onClose:()=>setIsShow(!1)})]})}};Toggle.parameters={...Toggle.parameters,docs:{...Toggle.parameters?.docs,source:{originalSource:"{\n  args: {\n    isShow: false,\n    isDim: false\n  },\n  render: function Render(args) {\n    const [isShow, setIsShow] = useState(false);\n    const openSheet = () => setIsShow(true);\n    const closeSheet = () => setIsShow(false);\n    return <>\r\n        <button onClick={openSheet}>Open Sheet</button>\r\n        <Sheet {...args} isShow={isShow} onClose={closeSheet} />\r\n      </>;\n  }\n}",...Toggle.parameters?.docs?.source}}};const __namedExportsOrder=["Toggle"]}}]);