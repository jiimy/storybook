"use strict";(self.webpackChunksnow_white_ui=self.webpackChunksnow_white_ui||[]).push([[102],{"./src/stories/timerProgressBar/TimerProgressBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Start:()=>Start,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TimerProgressBar_stories});var _templateObject,taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function loopRender(i,count){let second=i/count;return"\n\t\t&:nth-child(".concat(i+1,") {\n      background: #ccc;\n      transition-delay: ").concat(second,"s;\n    }\n\t")}const ProgressWrap=styled_components_browser_esm.ZP.div(_templateObject||(_templateObject=(0,taggedTemplateLiteral.Z)(["\n  .timer-progress-item {\n      ",";\n    }\n"])),(props=>function arrayloop(props){let str="";for(let index=0;index<props.count;index++)str+=loopRender(index,props.count);return str}(props.itemNumber))),TimerProgressBar=_ref=>{let{theme="fill",...attr}=_ref;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["fill"===theme&&(0,jsx_runtime.jsx)(ProgressWrap,{...attr}),"tick"===theme&&(0,jsx_runtime.jsx)(ProgressWrap,{...attr,children:"number"==typeof attr.itemNumber&&[...Array(attr.itemNumber)].map(((n,index)=>(0,jsx_runtime.jsx)("div",{className:"timer-progress-item","data-time":index+1},index)))})]})},timerProgressBar_TimerProgressBar=TimerProgressBar;try{TimerProgressBar.displayName="TimerProgressBar",TimerProgressBar.__docgenInfo={description:"",displayName:"TimerProgressBar",props:{theme:{defaultValue:{value:"fill"},description:"",name:"theme",required:!1,type:{name:"enum",value:[{value:'"tick"'},{value:'"fill"'}]}},percent:{defaultValue:null,description:"",name:"percent",required:!1,type:{name:"boolean"}},timer:{defaultValue:null,description:"",name:"timer",required:!0,type:{name:"number"}},delay:{defaultValue:null,description:"",name:"delay",required:!1,type:{name:"number"}},itemNumber:{defaultValue:null,description:"",name:"itemNumber",required:!1,type:{name:'number | "auto"'}},start:{defaultValue:null,description:"",name:"start",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/timerProgressBar/TimerProgressBar.tsx#TimerProgressBar"]={docgenInfo:TimerProgressBar.__docgenInfo,name:"TimerProgressBar",path:"src/stories/timerProgressBar/TimerProgressBar.tsx#TimerProgressBar"})}catch(__react_docgen_typescript_loader_error){}const TimerProgressBar_stories={title:"Component/TimerProgressBar",component:timerProgressBar_TimerProgressBar,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{}},Start={args:{},render:function Render(args){const[getOpen,setGetOpen]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>{setGetOpen(!0)},children:"시작"}),(0,jsx_runtime.jsx)("div",{})]})}};Start.parameters={...Start.parameters,docs:{...Start.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: function Render(args) {\n    const [getOpen, setGetOpen] = useState(false);\n    const clickToggleProgress = (state: boolean) => {\n      setGetOpen(state);\n    };\n    return <>\r\n        <button onClick={() => clickToggleProgress(true)}>시작</button>\r\n        <div>\r\n          {/* <TimerProgressBar /> */}\r\n        </div>\r\n      </>;\n  }\n}",...Start.parameters?.docs?.source}}};const __namedExportsOrder=["Start"]}}]);