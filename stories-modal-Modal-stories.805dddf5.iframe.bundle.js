"use strict";(self.webpackChunksnow_white_ui=self.webpackChunksnow_white_ui||[]).push([[403],{"./src/stories/modal/Modal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Toggle:()=>Toggle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Modal_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js");const PortalModal=_ref=>{let{children,onClose}=_ref;(0,react.useEffect)((()=>{const handleKeydown=e=>{e.key};return window.addEventListener("keydown",handleKeydown),()=>{window.removeEventListener("keydown",handleKeydown)}}),[onClose]);const modalRoot=document.getElementById("modal");return modalRoot?react_dom.createPortal(children,modalRoot):null},modal_module_modal="modal_modal__PvgWz",modal_module_modal_container="modal_modal_container__+Qd07",modal_module_modal_content="modal_modal_content__vuVOh",modal_module_close="modal_close__G3kPC",modal_module_dim="modal_dim__hi9Tu";var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ModalFrame=_ref=>{let{children,setOnModal,onClose,isDim,zindex,dimClick,onClick,className}=_ref;return(0,jsx_runtime.jsx)(PortalModal,{children:(0,jsx_runtime.jsxs)("div",{className:"".concat(modal_module_modal," ").concat(className),onClick,children:[(0,jsx_runtime.jsx)("div",{className:modal_module_modal_container,children:(0,jsx_runtime.jsxs)("div",{className:modal_module_modal_content,children:[children,onClose&&(0,jsx_runtime.jsx)("div",{className:modal_module_close,onClick:()=>setOnModal(!1),children:(0,jsx_runtime.jsx)("span",{children:"닫기 아이콘"})})]})}),isDim&&(0,jsx_runtime.jsx)("div",{className:modal_module_dim,onClick:()=>dimClick&&setOnModal(!1)})]})})},modal_ModalFrame=ModalFrame;try{ModalFrame.displayName="ModalFrame",ModalFrame.__docgenInfo={description:'<div id="modal"></div> 추가 \nreact 일 경우 : public/index.html의 #root 다음으로, \nnext page router일 경우 : ㅁㅁ에 (TODO: 추후 추가) , \nnext app router 일 경우 : app/layout.tsx의 <body></body> 안에',displayName:"ModalFrame",props:{setOnModal:{defaultValue:null,description:"",name:"setOnModal",required:!0,type:{name:"Dispatch<SetStateAction<boolean>>"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"boolean"}},isDim:{defaultValue:null,description:"",name:"isDim",required:!1,type:{name:"boolean"}},zindex:{defaultValue:null,description:"",name:"zindex",required:!1,type:{name:"number"}},dimClick:{defaultValue:null,description:"",name:"dimClick",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => {})"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/modal/ModalFrame.tsx#ModalFrame"]={docgenInfo:ModalFrame.__docgenInfo,name:"ModalFrame",path:"src/stories/modal/ModalFrame.tsx#ModalFrame"})}catch(__react_docgen_typescript_loader_error){}const ModalButton=_ref=>{let{children}=_ref;return(0,jsx_runtime.jsx)("div",{className:"",children})},modalItem_ModalButton=ModalButton;try{ModalButton.displayName="ModalButton",ModalButton.__docgenInfo={description:"",displayName:"ModalButton",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/modal/modalItem/ModalButton.tsx#ModalButton"]={docgenInfo:ModalButton.__docgenInfo,name:"ModalButton",path:"src/stories/modal/modalItem/ModalButton.tsx#ModalButton"})}catch(__react_docgen_typescript_loader_error){}const ModalContent=_ref=>{let{children}=_ref;return(0,jsx_runtime.jsx)("div",{className:"",children})},modalItem_ModalContent=ModalContent;try{ModalContent.displayName="ModalContent",ModalContent.__docgenInfo={description:"",displayName:"ModalContent",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/modal/modalItem/ModalContent.tsx#ModalContent"]={docgenInfo:ModalContent.__docgenInfo,name:"ModalContent",path:"src/stories/modal/modalItem/ModalContent.tsx#ModalContent"})}catch(__react_docgen_typescript_loader_error){}const ModalTitle=_ref=>{let{children}=_ref;return(0,jsx_runtime.jsx)("div",{className:"",children})},modalItem_ModalTitle=ModalTitle;try{ModalTitle.displayName="ModalTitle",ModalTitle.__docgenInfo={description:"",displayName:"ModalTitle",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/modal/modalItem/ModalTitle.tsx#ModalTitle"]={docgenInfo:ModalTitle.__docgenInfo,name:"ModalTitle",path:"src/stories/modal/modalItem/ModalTitle.tsx#ModalTitle"})}catch(__react_docgen_typescript_loader_error){}const Modal=Object.assign(modal_ModalFrame,{Title:modalItem_ModalTitle,Content:modalItem_ModalContent,Buttons:modalItem_ModalButton});try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{setOnModal:{defaultValue:null,description:"",name:"setOnModal",required:!0,type:{name:"Dispatch<SetStateAction<boolean>>"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"boolean"}},isDim:{defaultValue:null,description:"",name:"isDim",required:!1,type:{name:"boolean"}},zindex:{defaultValue:null,description:"",name:"zindex",required:!1,type:{name:"number"}},dimClick:{defaultValue:null,description:"",name:"dimClick",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"(() => {})"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/modal/Modal.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"src/stories/modal/Modal.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}const Modal_stories={title:"Component/Modal",component:Modal,tags:["autodocs"],parameters:{layout:"fullscreen"},args:{}},Toggle={args:{},render:function Render(args){const[modal1,setModal1]=(0,react.useState)(!1);return console.log("모달 오픈 ",modal1),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setModal1(!0),children:"모달1"}),modal1&&(0,jsx_runtime.jsx)(Modal,{setOnModal:()=>setModal1(!1),dimClick:args.dimClick,isDim:args.isDim,onClose:args.onClose,children:(0,jsx_runtime.jsx)(Modal.Title,{children:"모달 타이틀"})})]})}};Toggle.parameters={...Toggle.parameters,docs:{...Toggle.parameters?.docs,source:{originalSource:"{\n  args: {\n    // isShow: false,\n    // isDim: false,\n  },\n  render: function Render(args) {\n    const [modal1, setModal1] = useState(false);\n    console.log('모달 오픈 ', modal1);\n    return <>\r\n        <button onClick={() => setModal1(true)}>모달1</button>\r\n        {modal1 && <Modal setOnModal={() => setModal1(false)} dimClick={args.dimClick} isDim={args.isDim} onClose={args.onClose}>\r\n            <Modal.Title>모달 타이틀</Modal.Title>\r\n          </Modal>}\r\n      </>;\n  }\n}",...Toggle.parameters?.docs?.source}}};const __namedExportsOrder=["Toggle"]}}]);